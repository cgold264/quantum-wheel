{"ast":null,"code":"var _jsxFileName = \"/home/cgoldschmidt/Documents/Projects/quantum-wheel/src/App.js\";\nimport WheelComponent from 'react-wheel-of-prizes';\nimport Container from 'react-bootstrap/Container';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const segments = ['better luck next time', 'won 70', 'won 10', 'better luck next time', 'won 2', 'won uber pass', 'better luck next time', 'won a voucher'];\n  const segColors = ['#EE4040', '#F0CF50', '#815CD1', '#3DA5E0', '#34A24F', '#F9AA1F', '#EC3F3F', '#FF9000'];\n  const onFinished = winner => {\n    console.log(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quantum Wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sz: 6,\n        children: /*#__PURE__*/_jsxDEV(WheelComponent, {\n          segments: segments,\n          segColors: segColors,\n          winningSegment: \"won 10\",\n          onFinished: winner => onFinished(winner),\n          primaryColor: \"black\",\n          contrastColor: \"white\",\n          buttonText: \"Spin\",\n          isOnlyOnce: false,\n          size: 290,\n          upDuration: 1000,\n          downDuration: 10,\n          fontFamily: \"Arial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          children: \"Quantum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          children: \"Conventional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WheelComponent","Container","Row","Col","Button","jsxDEV","_jsxDEV","App","segments","segColors","onFinished","winner","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","sz","winningSegment","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","variant","_c","$RefreshReg$"],"sources":["/home/cgoldschmidt/Documents/Projects/quantum-wheel/src/App.js"],"sourcesContent":["import WheelComponent from 'react-wheel-of-prizes'\nimport Container from 'react-bootstrap/Container';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n  const segments = [\n    'better luck next time',\n    'won 70',\n    'won 10',\n    'better luck next time',\n    'won 2',\n    'won uber pass',\n    'better luck next time',\n    'won a voucher'\n  ]\n  const segColors = [\n    '#EE4040',\n    '#F0CF50',\n    '#815CD1',\n    '#3DA5E0',\n    '#34A24F',\n    '#F9AA1F',\n    '#EC3F3F',\n    '#FF9000'\n  ]\n  const onFinished = (winner) => {\n    console.log(winner)\n  }\n\n  return (\n    <Container>\n      <Row className='text-center'>\n        <h1>\n          Quantum Wheel\n        </h1>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <Col sz={6}>\n          <WheelComponent\n              segments={segments}\n              segColors={segColors}\n              winningSegment='won 10'\n              onFinished={(winner) => onFinished(winner)}\n              primaryColor='black'\n              contrastColor='white'\n              buttonText='Spin'\n              isOnlyOnce={false}\n              size={290}\n              upDuration={1000}\n              downDuration={10}\n              fontFamily='Arial'\n            />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Button variant=\"outline-primary\">\n            Quantum\n          </Button>\n        </Col>\n        <Col>\n          <Button variant=\"outline-primary\">\n            Conventional\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}