{"ast":null,"code":"var _jsxFileName = \"/home/cgoldschmidt/Documents/Projects/quantum-wheel/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport WheelComponent from 'react-wheel-of-prizes';\nimport Container from 'react-bootstrap/Container';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const quantumImage = \"./backgrounds/quantum-background.jpg\";\n  const containerStyle = {\n    backgroundImage: `url(${quantumImage})`,\n    backgroundSize: 'cover' // Adjust this based on your requirements\n    // Other background-related styles can be added here\n  };\n  const [inputUsers, setInputUsers] = useState();\n  const [quantumRole, setQuantumRole] = useState(false);\n  const segments = ['cullen', 'bender', 'connor', 'erik'];\n  const segColors = ['#EE4040', '#F0CF50', '#815CD1', '#3DA5E0', '#34A24F', '#F9AA1F', '#EC3F3F', '#FF9000'];\n  const onFinished = winner => {\n    console.log(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center bg-dark text-light\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quantum Wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: quantumRole ? \"quantum-background\" : \"conventional-background\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(WheelComponent, {\n              segments: segments,\n              segColors: segColors,\n              winningSegment: \"won 10\",\n              onFinished: winner => onFinished(winner),\n              primaryColor: \"black\",\n              contrastColor: \"white\",\n              buttonText: \"Spin\",\n              isOnlyOnce: false,\n              size: 250,\n              upDuration: 1000,\n              downDuration: 10,\n              fontFamily: \"Arial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"py-5 bg-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"exampleForm.ControlInput1\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Players\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  row: 7\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: quantumRole ? \"primary\" : \"outline-primary\",\n              onClick: () => {\n                setQuantumRole(true);\n              },\n              className: \"m-2\",\n              children: \"Quantum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: !quantumRole ? \"primary\" : \"outline-primary\",\n              onClick: () => {\n                setQuantumRole(false);\n              },\n              className: \"m-2\",\n              children: \"Conventional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"4Y++hFSNMDCr2yqed0Si7I7OfJg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","WheelComponent","Container","Row","Col","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","quantumImage","containerStyle","backgroundImage","backgroundSize","inputUsers","setInputUsers","quantumRole","setQuantumRole","segments","segColors","onFinished","winner","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","winningSegment","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","Group","controlId","Label","Control","as","row","variant","onClick","_c","$RefreshReg$"],"sources":["/home/cgoldschmidt/Documents/Projects/quantum-wheel/src/App.js"],"sourcesContent":["import {useState} from 'react';\nimport WheelComponent from 'react-wheel-of-prizes'\nimport Container from 'react-bootstrap/Container';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nfunction App() {\n\n  const quantumImage = \"./backgrounds/quantum-background.jpg\";\n\n  const containerStyle = {\n    backgroundImage: `url(${quantumImage})`,\n    backgroundSize: 'cover', // Adjust this based on your requirements\n    // Other background-related styles can be added here\n  };\n\n  const [inputUsers, setInputUsers] = useState();\n\n  const [quantumRole, setQuantumRole] = useState(false);\n\n  const segments = [\n    'cullen',\n    'bender',\n    'connor',\n    'erik'\n  ]\n\n  const segColors = [\n    '#EE4040',\n    '#F0CF50',\n    '#815CD1',\n    '#3DA5E0',\n    '#34A24F',\n    '#F9AA1F',\n    '#EC3F3F',\n    '#FF9000'\n  ]\n  const onFinished = (winner) => {\n    console.log(winner)\n  }\n\n  return (\n    <>\n    <Row className='text-center bg-dark text-light'>\n          <h1>\n            Quantum Wheel\n          </h1>\n        </Row>\n    <div className={quantumRole ? \"quantum-background\" : \"conventional-background\"}>\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <WheelComponent\n                segments={segments}\n                segColors={segColors}\n                winningSegment='won 10'\n                onFinished={(winner) => onFinished(winner)}\n                primaryColor='black'\n                contrastColor='white'\n                buttonText='Spin'\n                isOnlyOnce={false}\n                size={250}\n                upDuration={1000}\n                downDuration={10}\n                fontFamily='Arial'\n              />\n          </Col>\n          <Col className=\"py-5 bg-secondary\">\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                <Form.Label><h1>Players</h1></Form.Label>\n                <Form.Control as=\"textarea\" row={7} />\n              </Form.Group>\n            </Form>\n            <Button variant={quantumRole ? \"primary\" : \"outline-primary\"} onClick={() => {setQuantumRole(true)}} className=\"m-2\">\n              Quantum\n            </Button>\n            <Button variant={!quantumRole ? \"primary\" : \"outline-primary\"} onClick={() => {setQuantumRole(false)}} className=\"m-2\">\n              Conventional\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}